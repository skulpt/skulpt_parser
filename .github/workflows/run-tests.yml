name: run-deno-tests
on:
    pull_request:
        types:
            - opened
            - reopened
            - synchronize
            - ready_for_review
            - locked
            - unlocked
    push:
        branches:
            - master
jobs:
    check-generated-parser:
        runs-on: ubuntu-latest
        steps:
            - uses: denoland/setup-deno@v1
              with:
                  deno-version: v1.x
            - uses: actions/setup-python@v2
              with:
                  python-version: "3.9.16"
            - uses: actions/checkout@master
              with:
                  repository: python/cpython
                  ref: "v3.9.16"
                  path: cpython
            - uses: actions/checkout@master
              with:
                  path: skulpt_parser
            - run: echo "$HOME/.deno/bin" >> $GITHUB_PATH
            - run: pip install --user pre-commit
            - name: build parser
              run: deno task gen-parser
              working-directory: "./skulpt_parser"
            - name: assert clean repo
              run: git diff-index --quiet --cached HEAD --
              working-directory: "./skulpt_parser"
    run-ast-tests:
        runs-on: ubuntu-latest
        steps:
            - uses: denoland/setup-deno@v1
              with:
                  deno-version: v1.x
            - uses: actions/setup-python@v2
              with:
                  python-version: "3.9.16"
            - uses: actions/checkout@master
            - run: echo "$HOME/.deno/bin" >> $GITHUB_PATH
            - name: run tests
              run: deno task test dump
              # working-directory: "./skulpt_parser"
    run-parse-tests:
        runs-on: ubuntu-latest
        outputs:
            tests: ${{ steps.run-tests.outputs.test }}
        steps:
            - uses: denoland/setup-deno@v1
              with:
                  deno-version: v1.x
            - uses: actions/setup-python@v2
              with:
                  python-version: "3.9.16"
            - uses: actions/checkout@master
            - run: echo "$HOME/.deno/bin" >> $GITHUB_PATH
            - name: run tests
              id: run-tests
              run: |
                  deno task test parse
            #       vr test parse > results
            #       echo "::set-output name=results::$(cat results | grep "test result" | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?(;[0-9]{1,2})?)?[mGK]//g")"
            # - uses: actions/github-script@v4
            #   if: github.event_name == 'pull_request'
            #   with:
            #       script: |
            #           github.issues.createComment({
            #             issue_number: context.issue.number,
            #             owner: context.repo.owner,
            #             repo: context.repo.repo,
            #             body: '${{steps.run-tests.outputs.results}}'
            #           })
    run-pypeg-tests:
        runs-on: ubuntu-latest
        outputs:
            tests: ${{ steps.run-tests.outputs.test }}
        steps:
            - uses: denoland/setup-deno@v1
              with:
                  deno-version: v1.x
            - uses: actions/setup-python@v2
              with:
                  python-version: "3.9.16"
            - uses: actions/checkout@master
            - run: echo "$HOME/.deno/bin" >> $GITHUB_PATH
            - name: run tests
              id: run-tests
              run: |
                  deno task test pypeg
    run-symtable-tests:
        runs-on: ubuntu-latest
        outputs:
            tests: ${{ steps.run-tests.outputs.test }}
        steps:
            - uses: denoland/setup-deno@v1
              with:
                  deno-version: v1.x
            - uses: actions/setup-python@v2
              with:
                  python-version: "3.9.16"
            - uses: actions/checkout@master
            - run: echo "$HOME/.deno/bin" >> $GITHUB_PATH
            - name: run tests
              id: run-tests
              run: |
                  deno task test symtable
